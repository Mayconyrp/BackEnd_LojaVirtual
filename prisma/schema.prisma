generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Administrador {
  id           Int       @id @default(autoincrement())
  nome         String
  email        String    @unique
  senha        String
  nivelAcesso  Int
  criadoEm     DateTime  @default(now())
  atualizadoEm DateTime  @updatedAt
}

model Usuario {
  id           Int       @id @default(autoincrement())
  cpf          String    @unique
  email        String    @unique
  name         String?
  senha        String
  enderecos    Endereco[]
  criadoEm     DateTime  @default(now())
  atualizadoEm DateTime  @updatedAt

  compras      Compra[]
  carrinhos    Carrinho[]
}

model Endereco {
  id        Int      @id @default(autoincrement())
  rua       String
  numero    Int
  cidade    String
  estado    String
  usuarioId Int
  Usuario   Usuario  @relation(fields: [usuarioId], references: [id])
}

model Categoria {
  id       Int       @id @default(autoincrement())
  nome     String
  produtos Produto[]
}

model Produto {
  id           Int       @id @default(autoincrement())
  imagem      String
  nome         String
  descricao    String?
  preco        Float
  tamanho      String    
  cor          String?   
  estoque      Int       
  disponivel   Boolean   
  categoriaId  Int
  Categoria    Categoria @relation(fields: [categoriaId], references: [id])

  compras      Compra[]
  carrinhos    Carrinho[]
}

model Carrinho {
  id           Int       @id @default(autoincrement())
  usuarioId    Int
  Usuario      Usuario   @relation(fields: [usuarioId], references: [id])
  produtoId    Int
  Produto      Produto   @relation(fields: [produtoId], references: [id])
  quantidade   Int       // Quantidade do produto no carrinho
  criadoEm     DateTime  @default(now())
  atualizadoEm DateTime  @updatedAt
}

model Compra {
  id            Int       @id @default(autoincrement())
  notaFiscal    String    // Número da nota fiscal
  tipoPagamento String    // Tipo de pagamento (e.g., "Cartão", "Boleto")
  produtoId     Int
  Produto       Produto   @relation(fields: [produtoId], references: [id])
  usuarioId     Int
  Usuario       Usuario   @relation(fields: [usuarioId], references: [id])
  dataCompra    DateTime  @default(now())
}

